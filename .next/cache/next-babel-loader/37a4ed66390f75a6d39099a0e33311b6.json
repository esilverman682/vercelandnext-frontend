{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useRouter } from 'next/router';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { API_URL, STRIPE_PK } from '../utils/urls';\nimport styles from '../styles/BuyButton.module.css';\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nconst stripePromise = loadStripe(STRIPE_PK);\nexport default function BuyButton({\n  product\n}) {\n  const {\n    user,\n    getToken\n  } = useContext(AuthContext);\n  const router = useRouter();\n\n  const handleBuy = async e => {\n    const stripe = await stripePromise;\n    const token = await getToken();\n    console.log(\"handleBuy token\", token);\n    e.preventDefault();\n    const res = await fetch(`${API_URL}/orders/`, {\n      method: 'POST',\n      body: JSON.stringify({\n        product\n      }),\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const session = await res.json();\n    console.log(\"session\", session);\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n  };\n\n  const redirectToLogin = async () => {\n    router.push('/login');\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [user && /*#__PURE__*/_jsx(\"button\", {\n      className: styles.buy,\n      onClick: handleBuy,\n      children: \"BUY\"\n    }), !user && /*#__PURE__*/_jsx(\"button\", {\n      className: styles.buy,\n      onClick: redirectToLogin,\n      children: \"Login to Buy\"\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}